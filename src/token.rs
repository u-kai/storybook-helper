#[derive(Debug, PartialEq)]
pub(super) struct TSXToken {
    pub token_type: TSXTokenType,
    pub literal: String,
}
impl TSXToken {
    pub fn new(token_type: TSXTokenType, literal: impl Into<String>) -> Self {
        Self {
            token_type,
            literal: literal.into(),
        }
    }
}

#[derive(Debug, PartialEq, Clone)]
pub enum TSXTokenType {
    Comment,
    StartDocComment,
    EndDocComment,
    Increment,
    Add,
    Sub,
    Colon,
    Dot,
    DoubleQuote,
    SingleQuote,
    CrossEqual,
    From,
    IncrementEqual,
    DecrementEqual,
    SlashEqual,
    Decrement,
    Pipe,
    Or,
    Assign,
    Eof,
    NumberLiteral,
    Ident,
    Plus,
    Minus,
    Bang,
    Asterisk,
    Slash,
    LTag,
    RTag,
    CloseLTag,
    CloseRTag,
    LtEq,
    GtEq,
    Comma,
    Semicolon,
    LParentheses,
    RParentheses,
    LCurlyBracket,
    RCurlyBracket,
    LBracket,
    RBracket,
    Eq,
    NotEq,
    Fn,
    True,
    False,
    If,
    Else,
    Return,
    Let,
    Var,
    Const,
    Question,
    NullishCoalescing,
    Type,
    StringLiteral,
    Class,
    Export,
    Import,
    Default,
    Arrow,
    String,
    Number,
    Boolean,
    Undefined,
}
